% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/harmonised-reading.R
\name{get_sensor}
\alias{get_sensor}
\title{Read and prepare a time series}
\usage{
get_sensor(
  timeseriesObject,
  buildingsRdf,
  sensorId,
  tz,
  outputFrequency,
  aggFunctions,
  useEstimatedValues,
  integrateCost = T,
  integrateEmissions = T,
  transformToAggregatableMeasuredProperty = F,
  aggregatableMeasuredPropertyName = NULL,
  defaultFactorsByMeasuredProperty = NULL
)
}
\arguments{
\item{timeseriesObject}{<string> path of JSON files, or <list> of time series.}

\item{sensorId}{<string> containing the sensor identifier.}

\item{tz}{<string> specifying the local time zone related to the
building in analysis. The format of this time zones are defined by the IANA
Time Zone Database (https://www.iana.org/time-zones).}

\item{outputFrequency}{<string> defining the frequency selected as output. 
It must follow ISO 8601 format representing the time step.}

\item{aggFunctions}{<string> describing the possible aggregation functions of the
resultant time series. Possible values: 'SUM', 'AVG', 'HDD', 'CDD'.}

\item{useEstimatedValues}{<boolean> describing if the estimated values of time series 
should be taken into account.}

\item{buildingSubject}{<uri> containing the building subject.}

\item{ratioCorrection}{<boolean> describing whether a ratio correction should be done, 
or not. Important to set to TRUE when time series contain gaps.}
}
\value{
<data.frame> containing the resultant time series.
}
\description{
This function get a raw time series related with a sensor and transform it to the one with 
the required characteristics (e.g. time aggregation, time alignment, cumulative to instantaneous, 
irregular to regular time steps...). It also integrates the calculation of the energy cost and
energy emissions.
}
